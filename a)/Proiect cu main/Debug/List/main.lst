###############################################################################
#
# IAR C/C++ Compiler V6.80.7.1083 for Atmel AVR           17/Jan/2023  18:39:03
# Copyright 1996-2016 IAR Systems AB.
# Standalone license - IAR Embedded Workbench for Atmel AVR
#
#    Source file  =  
#        D:\TUIASI AC CTI\anul III\Structura si organizarea
#        calculatoarelor\Proiect\Spre complet\Proiect cu main\main.c
#    Command line =  
#        "D:\TUIASI AC CTI\anul III\Structura si organizarea
#        calculatoarelor\Proiect\Spre complet\Proiect cu main\main.c" --cpu=m16
#        -mt -o "D:\TUIASI AC CTI\anul III\Structura si organizarea
#        calculatoarelor\Proiect\Spre complet\Proiect cu main\Debug\Obj" -lC
#        "D:\TUIASI AC CTI\anul III\Structura si organizarea
#        calculatoarelor\Proiect\Spre complet\Proiect cu main\Debug\List" -lB
#        "D:\TUIASI AC CTI\anul III\Structura si organizarea
#        calculatoarelor\Proiect\Spre complet\Proiect cu main\Debug\List"
#        --initializers_in_flash --no_cse --no_inline --no_code_motion
#        --no_cross_call --no_clustering --no_tbaa --module_name=main --debug
#        -DENABLE_BIT_DEFINITIONS -e --eeprom_size 512 --clib --library_module
#        -On
#    Locale       =  Romanian_Romania.1250
#    List file    =  
#        D:\TUIASI AC CTI\anul III\Structura si organizarea
#        calculatoarelor\Proiect\Spre complet\Proiect cu
#        main\Debug\List\main.lst
#    Object file  =  
#        D:\TUIASI AC CTI\anul III\Structura si organizarea
#        calculatoarelor\Proiect\Spre complet\Proiect cu
#        main\Debug\Obj\main.r90
#
###############################################################################

D:\TUIASI AC CTI\anul III\Structura si organizarea calculatoarelor\Proiect\Spre complet\Proiect cu main\main.c
      1          #include"header.h"
      2          int adunare(char a,char b);
      3          char scadere(char a,char b);
      4          char diferenta(char a,char b);

   \                                 In  segment CODE, align 2, keep-with-next
      5          int main(void){
   \                     main:
      6           adunare(255,255);
   \   00000000   EF1F               LDI     R17, 255
   \   00000002   EF0F               LDI     R16, 255
   \   00000004   ........           CALL    adunare
      7           scadere(1,2);
   \   00000008   E012               LDI     R17, 2
   \   0000000A   E001               LDI     R16, 1
   \   0000000C   ........           CALL    scadere
      8           diferenta(2,3);
   \   00000010   E013               LDI     R17, 3
   \   00000012   E002               LDI     R16, 2
   \   00000014   ........           CALL    diferenta
      9           return 0;
   \   00000018   E000               LDI     R16, 0
   \   0000001A   E010               LDI     R17, 0
   \   0000001C   9508               RET
     10          }

   Maximum stack usage in bytes:

   RSTACK Function
   ------ --------
      2   main
        2   -> adunare
        2   -> diferenta
        2   -> scadere


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
      30  main

 
 30 bytes in segment CODE
 
 30 bytes of CODE memory

Errors: none
Warnings: none
